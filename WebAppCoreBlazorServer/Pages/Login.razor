@layout LoginLayout
@page  "/login"
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@using WebAppCoreBlazorServer.Service
@inject IUserService userService
@inject IJSRuntime JSRuntime;
@using System.Security.Claims
@using System.Web;

@using WebAppCoreBlazorServer.Data

<div class="auth-wrapper">
    <div class="container-fluid h-100">
        <div class="row flex-row h-100 bg-white">
            <div class="col-xl-8 col-lg-6 col-md-5 p-0 d-md-block d-lg-block d-sm-none d-none">
                <div class="lavalite-bg" style="background-image: url('dist/img/login-bg.jpg');">
                    <div class="lavalite-overlay"></div>
                </div>
            </div>
            <div class="col-xl-4 col-lg-6 col-md-7 my-auto p-0">
                <div class="authentication-form mx-auto">
                    <div class="logo-centered">
                        <a href="../index-2.html"><img src="../src/img/brand.svg" alt=""></a>
                    </div>
                    <h3>Login to ThemeKit</h3>
                    <p>Happy to see you again!</p>

                    <div class="form-group">
                        <input type="text" class="form-control" @bind-value="@user.UserName" placeholder="Email" required="">  &nbsp;
                        <i class="ik ik-user"></i>
                    </div>
                    <div class="form-group">
                        <input type="password" class="form-control" @bind-value="@user.Password" placeholder="Password" required="">
                        <i class="ik ik-user"></i>
                    </div>
                    <div class="row">
                        <div class="col text-left">
                            <label class="custom-control custom-checkbox">
                                <input type="checkbox" class="custom-control-input" id="item_checkbox" name="item_checkbox" value="option1">
                                <span class="custom-control-label">&nbsp;Remember Me</span>
                            </label>
                        </div>
                        <div class="col text-right">
                            <a asp-controller="ForgotPassword" asp-action="Fgpass">Forgot Password ?</a>
                        </div>
                        <div>
                            <a asp-controller="LoginFacebook" asp-action="Loginfb" class="btn">
                                Login with Facebook or Gmail

                            </a>
                        </div>

                    </div>
                    <div class="h-captcha" data-sitekey="640e728a-097a-41af-a115-7192a5ec5bbd"></div>
                    <div class="sign-btn text-center">

                        <button class="btn btn-theme"  @onclick="@(() => LoginUser())">Login</button>
                    </div>

                    <div class="register">
                        <p>Don't have an account? <a href="/register" class="col-3">Create an account</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code{ private User user;
    protected override Task OnInitializedAsync()
    {
        user = new User();
        return base.OnInitializedAsync();
    }
    private async Task LoginUser()
    {
        var rs = await userService.GetUserByUserNamePassword(user.UserName, user.Password);
        if (rs == null)
        {
            JSRuntime.InvokeAsync<string>("bb_alert", "Tên đăng nhập hoặc mật khẩu không chính xác");
        }
        else
        {
            await sessionStorage.SetItemAsync("User", rs);
            NavigationManager.NavigateTo("/");
        }
    }
    private async Task<bool> ValidateUser()
    {

        ((CustomAuthenticationStateProvider)AuthenticationStateProvider).MarkUserAsAuthenticated(user.Email);
        NavigationManager.NavigateTo("/");
        await sessionStorage.SetItemAsync("Email", user.Email);
        return await Task.FromResult(true);
    }
}

