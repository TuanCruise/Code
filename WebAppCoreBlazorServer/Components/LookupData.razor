@page "/dialog"
@using WebCore.Entities;
@using WebModelCore;

@inject DialogService dialogService

<div class="row">
    <div class="col-md-6">
        @*<h3>Events</h3>*@
        <RadzenCard style="overflow: auto;height:20px;">
            @foreach (var e in events.OrderByDescending(i => i.Key))
            {
                @e.Value
                <br />
            }
        </RadzenCard>
    </div>
    <div class="col-md-6">
        @*<h3>Dialog</h3>*@
        @*<RadzenButton Text=@($"Show OrderID: {orderID} details") Click="@(args => dialogService.Open<WebAppCoreBlazorServer.Pages.Search>($"modId {orderID}",
            new Dictionary<string, object>() { { "OrderID", orderID } },
            new DialogOptions(){ Width = "700px", Height = "530px" }))" />*@
        <RadzenButton Text="..." Click="@(args => dialogService.Open<WebAppCoreBlazorServer.Pages.Search>($"modId {modId}",
        new Dictionary<string, object>() { { "modId", modId } },
        new DialogOptions(){ Width = "700px", Height = "530px" }))" />

        @*<h3 style="margin-top: 20px;">Simple Dialog</h3>*@
        <RadzenButton Text=@($"Tìm kiếm") Click="@ShowSimpleDialog" Visible="false" />
    </div>
</div>

@code {

    [Parameter]
    public ModuleFieldInfo Field { get; set; }

    [Parameter]
    public ModuleInfoModel ModuleInfo { get; set; }

    string modId = "03901";

    Dictionary<DateTime, string> events = new Dictionary<DateTime, string>();

    protected override void OnInitialized()
    {
        dialogService.OnOpen += Open;
        dialogService.OnClose += Close;
    }

    void Open(string title, Type type, Dictionary<string, object> parameters, DialogOptions options)
    {
        modId = Field.ModuleID;

        events.Add(DateTime.Now, "Dialog opened");
        StateHasChanged();
    }

    void Close(dynamic result)
    {
        //events.Add(DateTime.Now, "Dialog closed. Result: " + result);
        events.Add(DateTime.Now, result);
        StateHasChanged();
    }

    async Task ShowSimpleDialog() => await dialogService.OpenAsync("Simple Dialog", ds =>
    @<RadzenCard Style="padding: 20px;">
        <p Style="margin-bottom: 10px;">Confirm?</p>
        <div class="row">
            <div class="col-md-12">
                <RadzenButton Text="Ok" Click="()=> ds.Close(true)" Style="margin-bottom: 10px; width: 150px" />
                <RadzenButton Text="Cancel" Click="()=> ds.Close(false)" ButtonStyle="ButtonStyle.Secondary" Style="margin-bottom: 10px; width: 150px" />
            </div>
        </div>
    </RadzenCard>);
}
